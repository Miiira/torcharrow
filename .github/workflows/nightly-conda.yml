name: TorchArrow Nightly Build and Test for Conda
on:
#  schedule:
#    - cron: "0 0 * * *"
  pull_request:
    branches:
      - main
      # For PR created by ghstack
      - gh/*/*/base

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  workflow_call:
    secrets:
      AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID:
        required: true
      AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY:
        required: true

jobs:
  linux-container:
    runs-on: ubuntu-latest
#    container: prestocpp/velox-velox-torcharrow:kpai-20220301
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
    steps:
      - name: Print CPU info
        run: |          
          cat /proc/cpuinfo          

      - name: Create Conda Env
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: conda_build_env

      - name: Check out source repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install dependencies with APT
        run: |
          sudo apt-get update
          sudo apt install -y g++ cmake ccache ninja-build checkinstall git \
          libssl-dev libboost-all-dev libdouble-conversion-dev libgoogle-glog-dev \
          libgflags-dev libevent-dev libre2-dev

      - name: Build and install folly and fmt
        run: |
          sudo ./scripts/setup-ubuntu.sh

      - name: Conda Build
        shell: bash -l {0}
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          # source /opt/conda/etc/profile.d/conda.sh
          conda activate conda_build_env                    
          conda install -yq conda-build -c conda-forge          
          ./packaging/build_conda.sh

#      - name: Upload wheel to S3 Storage
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY }}
#          S3_PATH: "s3://pytorch/whl/nightly/"
#        run: |
#          source /opt/conda/etc/profile.d/conda.sh
#          conda activate env${{ matrix.python-version }}
#          pip install --user awscli
#          set -x
#          if [[ -z "${AWS_ACCESS_KEY_ID}" ]]; then
#            echo "AWS_ACCESS_KEY_ID is not set, exiting upload"
#            exit 1
#          fi
#          for pkg in fixed_dist/torcharrow*.whl; do
#              ~/.local/bin/aws s3 cp "$pkg" "$S3_PATH" --acl public-read
#          done

#  macos-container:
#    runs-on: macos-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version:
#          - 3.7
#          - 3.8
#          - 3.9
#    steps:
#      - name: Create Conda Env
#        uses: conda-incubator/setup-miniconda@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#          activate-environment: conda_build_env
#
#      - name: Check out source repository
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#
#      - name: Conda Build
#        shell: bash -l {0}
#        env:
#          PYTHON_VERSION: ${{ matrix.python-version }}
#        run: |
#          conda activate conda_build_env
#          conda install -yq conda-build -c conda-forge
#          MACOSX_DEPLOYMENT_TARGET=10.15 ./csrc/velox/velox/scripts/setup-macos.sh
#          ./packaging/build_conda.sh

#      - name: Upload wheel to S3 Storage
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY }}
#          S3_PATH: "s3://pytorch/whl/nightly/"
#        run: |
#          pip install --user awscli
#          set -x
#          if [[ -z "${AWS_ACCESS_KEY_ID}" ]]; then
#             echo "AWS_ACCESS_KEY_ID is not set, exiting upload"
#             exit 1
#          fi
#          for pkg in fixed_dist/torcharrow*.whl; do
#              ~/.local/bin/aws s3 cp "$pkg" "$S3_PATH" --acl public-read
#          done
